---
title: "Laboratorio 1 - Data Science"
author: "Daniel Garcia"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
for (libreria in c("rela","psych","FactoMineR", "fpc", "ggplot2")) {
  if (!require(libreria, character.only=T)) {
    install.packages(libreria)
    library(libreria, character.only=T)
  }
}

casas <- read.csv("DataFolder/train.csv", header=T)
casas_test <- read.csv("DataFolder/test.csv", header=T)
```



## Inciso 1: Resumen del dataset.
Utilizando la funcion sunmary se obtiene una tabla la cual contiene cada columna del dataframe como una variable. La información obtenida de cada variable es cantidad minima, mediana, moda, maximo. Esto permite observar el rango de valores a los cuales cada variable esta acotada.De esta manera el usuario puede tener una idea acerca de los datos con los que se estan trabajando.



```{r Summary}
summary(casas)
```

## Inciso 2: Tipos de variables.
Los tipos de variables se pueden obtener mediante la funcion sapply la cual se encarga de leer todos los datos contenidos en una columna y regresar el tipo de dato el cual representa a toda la columna.
En este caso se tiene que todas las columnas numericas son de tipo cuantitativa discreta y el resto pertenecen al tipo de variable categorico.

```{r Variables, eval=TRUE}
sapply(casas, class)
```


## Inciso 3: Aislamiento de variables y correlacion entre las mismas.


```{r DataSeparation}
listOfDataTypes <- sapply(casas,class)
index = 1
dataIndexList = c()
dataExcludedList = c()
for(i in listOfDataTypes){
  if(i == "integer")
  {
    dataIndexList <- c(dataIndexList, index)
  }
  else
  {
    dataExcludedList <-c(dataExcludedList,index)
  }
  index = index + 1
}
casas_var_numericas <- subset(casas, select= c(dataIndexList))
casas_var_numericas <- subset(casas_var_numericas, select = -c(Id, MSSubClass,OverallQual, OverallCond))
casas_var_descriptivas <- subset(casas, select = c(dataExcludedList))
casasNumericas <- casas_var_numericas[complete.cases(casas_var_numericas),]
CorrelationMatrix <- cor(casas_var_numericas, method = c("pearson"))
```



## Inciso 4: Tablas de frecuencias de variables categoricas.

```{r Charts, eval=FALSE}
for(i in names(casas_var_descriptivas))
{
  hist(table(casas_var_descriptivas[i]), main = paste("Histogram of", names(casas_var_descriptivas[i])), xlab = names(casas_var_descriptivas[i]))
  barplot(table(casas_var_descriptivas[i]), main = paste("Histogram of", names(casas_var_descriptivas[i])), xlab = names(casas_var_descriptivas[i]))
}

```


## Inciso 5: Clustering. 

```{r ClusteringOne, eval=TRUE}

km<-kmeans(casasNumericas[,c(6,7)], 3, iter.max = 10)

km$cluster <- as.factor(km$cluster)

ggplot(casasNumericas, aes(YearBuilt, YearRemodAdd, color = km$cluster)) + geom_point()

```

```{r ClusteringTwo, eval=TRUE}


hc<-hclust(dist(casasNumericas)) 
plot(hc) 
rect.hclust(hc,k=3) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=3) #corta el dendograma, determinando el grupo de cada fila
casasNumericas$gruposHC<-groups

g1HC<-casasNumericas[casasNumericas$gruposHC==1,]
g2HC<-casasNumericas[casasNumericas$gruposHC==2,]
g3HC<-casasNumericas[casasNumericas$gruposHC==3,]

```

## Inciso 6: Conclusiones y Resumen. 
En conclusion, para poder determinar el valor de una casa se deben de tomar en cuenta factores tales como el tamaño del lote, año construido, año de remodelacion, servicios basicos y numero de baños y cuartos. Todos los demas factores si afectan de forma leve puesto que tienen una correlacion baja entre si. 

